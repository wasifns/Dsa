{   
    for(int i = 0; i < n-1; i++){
        int mini = i;
        for(int j = i+1; j < n; j++){
            if(arr[mini] > arr[j]){
                mini = j;
            }
        }
        // Swap the found minimum element with the first element
        if(mini != i) {
            swap(arr[i], arr[mini]);
        }
    }
}



Bubble Sort is one of the sorting algorithms that works by repeatedly swapping the adjacent elements of the array if they are not in sorted order.
You are given an unsorted array consisting of N non-negative integers. Your task is to sort the array in non-decreasing order using the Bubble Sort algorithm.
Sample Input 1:
1
5
6 2 8 4 10
Sample Output 1:
2 4 6 8 10
Sample Input 2:
2
2
1 2
4
4 3 2 1
Sample Output 2:
1 2
1 2 3 4

/algorithm
#include <bits/stdc++.h> 
void bubbleSort(vector<int>& arr, int n)
{   
    for(int i=0; i<n-1; i++){
        int first = i;
        for(int j=i+1; j<n; j++){
            int second = j;
            if(arr[first] > arr[second]){
                swap(arr[first], arr[second]);
                
            }
        }
    }
}
